/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Getter, GetterInterface } from "../../../nocadena/script/Getter";

const _abi = [
  {
    inputs: [],
    name: "IS_SCRIPT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vm",
    outputs: [
      {
        internalType: "contract Vm",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805460ff191660019081179091556004805461ffff1916909117905534801561002e57600080fd5b5060bf8061003d6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80633a768463146037578063f8ccbf4714606e575b600080fd5b6051737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b600054607a9060ff1681565b6040519015158152602001606556fea26469706673582212206ba73870d573bda205effbd1596c2d59c2e7b1ef4a3d8d0f08557c2afbee85be64736f6c634300080f0033";

type GetterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GetterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Getter__factory extends ContractFactory {
  constructor(...args: GetterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Getter> {
    return super.deploy(overrides || {}) as Promise<Getter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Getter {
    return super.attach(address) as Getter;
  }
  override connect(signer: Signer): Getter__factory {
    return super.connect(signer) as Getter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GetterInterface {
    return new utils.Interface(_abi) as GetterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Getter {
    return new Contract(address, _abi, signerOrProvider) as Getter;
  }
}

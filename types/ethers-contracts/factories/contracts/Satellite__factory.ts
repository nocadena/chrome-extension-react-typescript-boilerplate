/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Satellite, SatelliteInterface } from "../../contracts/Satellite";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_communicator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "InvestedLido",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "aaveDepositedDai",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInvestedApwine",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInvestedLido",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "investApwine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "investLido",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161042a38038061042a83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610397806100936000396000f3fe60806040526004361061004a5760003560e01c80630a3b2df51461004c578063194dab461461007357806380bf113e14610088578063aff3681b146100b5578063b1995f21146100d5575b005b34801561005857600080fd5b506100616100f5565b60405190815260200160405180910390f35b34801561007f57600080fd5b50610061610171565b34801561009457600080fd5b506100616100a33660046102ee565b60016020526000908152604090205481565b3480156100c157600080fd5b5061004a6100d0366004610312565b610217565b3480156100e157600080fd5b5061004a6100f0366004610312565b610227565b6040516370a0823160e01b8152306004820152600090731643e812ae58766192cf7d2cf9567df2c37e9b7f906370a08231906024015b602060405180830381865afa158015610148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016c919061032b565b905090565b600073ccaff2a8f34f3b294715487cb62144f90eab84de6001600160a01b031663f018ae696040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e99190610344565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240161012b565b6103e861022381610227565b5050565b60405163a1903eab60e01b815260006004820152731643e812ae58766192cf7d2cf9567df2c37e9b7f9063a1903eab90839060240160206040518083038185885af115801561027a573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061029f919061032b565b506040518181527f83bf32c86515ba0518d14887f1bbc8834ed3675bfe21157a4158817a574a69299060200160405180910390a150565b6001600160a01b03811681146102eb57600080fd5b50565b60006020828403121561030057600080fd5b813561030b816102d6565b9392505050565b60006020828403121561032457600080fd5b5035919050565b60006020828403121561033d57600080fd5b5051919050565b60006020828403121561035657600080fd5b815161030b816102d656fea264697066735822122090e7533c126071fc4f88aa4b30daf006940263dcc3943bbd5935b8b56871895364736f6c634300080f0033";

type SatelliteConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SatelliteConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Satellite__factory extends ContractFactory {
  constructor(...args: SatelliteConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _communicator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Satellite> {
    return super.deploy(_communicator, overrides || {}) as Promise<Satellite>;
  }
  override getDeployTransaction(
    _communicator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_communicator, overrides || {});
  }
  override attach(address: string): Satellite {
    return super.attach(address) as Satellite;
  }
  override connect(signer: Signer): Satellite__factory {
    return super.connect(signer) as Satellite__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SatelliteInterface {
    return new utils.Interface(_abi) as SatelliteInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Satellite {
    return new Contract(address, _abi, signerOrProvider) as Satellite;
  }
}
